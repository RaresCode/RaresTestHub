{"name": "test_job_link_content[artvertising0]", "status": "failed", "statusDetails": {"message": "AssertionError: The following job links ['https://www.artvertising.com.ro/cariere/digital-marketing-performance-specialist', 'https://www.artvertising.com.ro/cariere/content-writer-limba-romana', 'https://www.artvertising.com.ro/cariere/specialist-pr-publicitate', 'https://www.artvertising.com.ro/cariere/content-marketing', 'https://www.artvertising.com.ro/cariere/senior-graphic-designer-iasi', 'https://www.artvertising.com.ro/cariere/content-marketing-specialist'] do not contain the expected job title: ['Digital Marketing Specialist & PPC', 'Job Copywriter', 'Job Specialist Comunicare', 'Job Specialist Marketing Content', 'Senior Graphic Designer Iasi', 'Social Media Specialist']", "trace": "self = <TestJobsValidator.test_api.TestScrapers object at 0x7f7ae803fc70>\nsetup = (['Digital Marketing Specialist & PPC', 'Job Copywriter', 'Job Specialist Comunicare', 'Job Specialist Marketing Conte..., 'Romania', 'Romania', 'Romania', 'Romania', 'Romania'], [['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi']])\n\n    @pytest.mark.smoke\n    def test_job_link_content(self, setup):\n        \"\"\"\n        Test job links for the job title presence in the html response output\n        \"\"\"\n    \n        peviitor_jobs_data = setup\n        job_links = peviitor_jobs_data[2]\n        job_titles = peviitor_jobs_data[0]\n>       TestScrapers.setup_tests.jobdetails.check_job_link_content(job_links, job_titles)\n\ntests/TestJobsValidator/test_api.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/TestJobsValidator/api_utils/job_details_utils.py:132: in check_job_link_content\n    self.linkutils.check_job_link_content(self, links, job_titles)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.TestJobsValidator.api_utils.job_links_utils.LinksTestUtils object at 0x7f7ae803d000>\nmainobj = <tests.TestJobsValidator.api_utils.job_details_utils.JobDetails object at 0x7f7ae8ea1e70>\nlinks = ['https://www.artvertising.com.ro/cariere/digital-marketing-performance-specialist', 'https://www.artvertising.com.ro/...g.com.ro/cariere/senior-graphic-designer-iasi', 'https://www.artvertising.com.ro/cariere/content-marketing-specialist']\njob_titles = ['Digital Marketing Specialist & PPC', 'Job Copywriter', 'Job Specialist Comunicare', 'Job Specialist Marketing Content', 'Senior Graphic Designer Iasi', 'Social Media Specialist']\n\n    def check_job_link_content(self, mainobj, links, job_titles):\n        missing_job_links = []\n        missing_job_titles = []\n        for link, job_title in zip(links, job_titles):\n            job_content = LinksTestUtils().get_html_content(link)\n    \n            # Section where the content is not loaded after the request\n            if job_content is None:\n                missing_job_links.append(link)\n                missing_job_titles.append(job_title)\n                print(\"Job Page content has not been loaded\")\n                for job_link_index, job_link in enumerate(mainobj.filtered_job_links):\n                    if job_link == link:\n                        mainobj.filtered_job_links[job_link_index] = 'REMOVED_JOB'\n                continue\n    \n            # Section that run in case the job page content is loaded\n            soup = BeautifulSoup(job_content, 'html.parser')\n            job_content = soup.get_text()\n            if job_title not in job_content:\n                missing_job_links.append(link)\n                missing_job_titles.append(job_title)\n                for job_link_index, job_link in enumerate(mainobj.filtered_job_links):\n                    if job_link == link:\n                        mainobj.filtered_job_links[job_link_index] = 'REMOVED_JOB'\n    \n>       assert missing_job_links == [], f\"The following job links {missing_job_links} do not contain the expected job title: {missing_job_titles}\"\nE       AssertionError: The following job links ['https://www.artvertising.com.ro/cariere/digital-marketing-performance-specialist', 'https://www.artvertising.com.ro/cariere/content-writer-limba-romana', 'https://www.artvertising.com.ro/cariere/specialist-pr-publicitate', 'https://www.artvertising.com.ro/cariere/content-marketing', 'https://www.artvertising.com.ro/cariere/senior-graphic-designer-iasi', 'https://www.artvertising.com.ro/cariere/content-marketing-specialist'] do not contain the expected job title: ['Digital Marketing Specialist & PPC', 'Job Copywriter', 'Job Specialist Comunicare', 'Job Specialist Marketing Content', 'Senior Graphic Designer Iasi', 'Social Media Specialist']\n\ntests/TestJobsValidator/api_utils/job_links_utils.py:59: AssertionError"}, "description": "\n        Test job links for the job title presence in the html response output\n        ", "parameters": [{"name": "scraper_class", "value": "'artvertising'"}], "start": 1731820503283, "stop": 1731820507382, "uuid": "824533b3-c7fb-4666-badb-72762db1a0e8", "historyId": "ff831ea9db716cbcfd9e809155065103", "testCaseId": "3a863062a3835cf6b2ad4e16e5390871", "fullName": "tests.TestJobsValidator.test_api.TestScrapers#test_job_link_content", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.TestJobsValidator"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az519-73"}, {"name": "thread", "value": "1912-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.TestJobsValidator.test_api"}]}