{"name": "test_job_link_content[atpgroup]", "status": "failed", "statusDetails": {"message": "AssertionError: The following job links ['https://atp-motors.com/cariere/consilier-service-camioane-oradea-2/', 'https://atp-motors.com/cariere/consilier-service-camioane-baia-mare/', 'https://atp-motors.com/cariere/consilier-service-turisme-oradea/', 'https://atp-motors.com/cariere/consilier-service-turisme-baia-mare/', 'https://atp-motors.com/cariere/consilier-vanzare-auto-baia-mare/', 'https://atp-motors.com/cariere/key-account-manager-regiunea-sud/', 'https://atp-motors.com/cariere/operator-asamblare-baia-mare/', 'https://atp-motors.com/cariere/referent-licitatii-publice/', 'https://atp-motors.com/cariere/tehnician-diagnoza-camioane-electrician-auto/', 'https://atp-motors.com/cariere/tinichigiu-carosier/'] do not contain the expected job title: ['Consilier service camioane', 'Consilier service camioane', 'Consilier service turisme', 'Consilier service turisme', 'Consilier vânzare auto Baia Mare', 'Key account manager regiunea Sud', 'Operator asamblare Baia Mare', 'Referent licitații publice', 'Tehnician diagnoză camioane/electrician auto', 'Tinichigiu carosier']", "trace": "self = <TestJobsValidator.test_api.TestScrapers object at 0x7fe114017910>\nsetup = (['Consilier service camioane', 'Consilier service camioane', 'Consilier service turisme', 'Consilier service turisme'...'], ['Bihor'], ['Maramures'], ['Maramures'], ['Bucuresti', 'Ilfov', 'Ilfov', 'Constanta', 'Ilfov', 'Ilfov', ...], ...])\n\n    @pytest.mark.smoke\n    def test_job_link_content(self, setup):\n        \"\"\"\n        Test job links for the job title presence in the html response output\n        \"\"\"\n    \n        peviitor_jobs_data = setup\n        job_links = peviitor_jobs_data[2]\n        job_titles = peviitor_jobs_data[0]\n>       TestScrapers.setup_tests.jobdetails.check_job_link_content(job_links, job_titles)\n\ntests/TestJobsValidator/test_api.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/TestJobsValidator/api_utils/job_details_utils.py:132: in check_job_link_content\n    self.linkutils.check_job_link_content(self, links, job_titles)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.TestJobsValidator.api_utils.job_links_utils.LinksTestUtils object at 0x7fe1140b9000>\nmainobj = <tests.TestJobsValidator.api_utils.job_details_utils.JobDetails object at 0x7fe114f21e70>\nlinks = ['https://atp-motors.com/cariere/consilier-service-camioane-oradea-2/', 'https://atp-motors.com/cariere/consilier-serv...om/cariere/consilier-vanzare-auto-baia-mare/', 'https://atp-motors.com/cariere/key-account-manager-regiunea-sud/', ...]\njob_titles = ['Consilier service camioane', 'Consilier service camioane', 'Consilier service turisme', 'Consilier service turisme', 'Consilier vânzare auto Baia Mare', 'Key account manager regiunea Sud', ...]\n\n    def check_job_link_content(self, mainobj, links, job_titles):\n        missing_job_links = []\n        missing_job_titles = []\n        for link, job_title in zip(links, job_titles):\n            job_content = LinksTestUtils().get_html_content(link)\n    \n            # Section where the content is not loaded after the request\n            if job_content is None:\n                missing_job_links.append(link)\n                missing_job_titles.append(job_title)\n                print(\"Job Page content has not been loaded\")\n                for job_link_index, job_link in enumerate(mainobj.filtered_job_links):\n                    if job_link == link:\n                        mainobj.filtered_job_links[job_link_index] = 'REMOVED_JOB'\n                continue\n    \n            # Section that run in case the job page content is loaded\n            soup = BeautifulSoup(job_content, 'html.parser')\n            job_content = soup.get_text()\n            if job_title not in job_content:\n                missing_job_links.append(link)\n                missing_job_titles.append(job_title)\n                for job_link_index, job_link in enumerate(mainobj.filtered_job_links):\n                    if job_link == link:\n                        mainobj.filtered_job_links[job_link_index] = 'REMOVED_JOB'\n    \n>       assert missing_job_links == [], f\"The following job links {missing_job_links} do not contain the expected job title: {missing_job_titles}\"\nE       AssertionError: The following job links ['https://atp-motors.com/cariere/consilier-service-camioane-oradea-2/', 'https://atp-motors.com/cariere/consilier-service-camioane-baia-mare/', 'https://atp-motors.com/cariere/consilier-service-turisme-oradea/', 'https://atp-motors.com/cariere/consilier-service-turisme-baia-mare/', 'https://atp-motors.com/cariere/consilier-vanzare-auto-baia-mare/', 'https://atp-motors.com/cariere/key-account-manager-regiunea-sud/', 'https://atp-motors.com/cariere/operator-asamblare-baia-mare/', 'https://atp-motors.com/cariere/referent-licitatii-publice/', 'https://atp-motors.com/cariere/tehnician-diagnoza-camioane-electrician-auto/', 'https://atp-motors.com/cariere/tinichigiu-carosier/'] do not contain the expected job title: ['Consilier service camioane', 'Consilier service camioane', 'Consilier service turisme', 'Consilier service turisme', 'Consilier vânzare auto Baia Mare', 'Key account manager regiunea Sud', 'Operator asamblare Baia Mare', 'Referent licitații publice', 'Tehnician diagnoză camioane/electrician auto', 'Tinichigiu carosier']\n\ntests/TestJobsValidator/api_utils/job_links_utils.py:59: AssertionError"}, "description": "\n        Test job links for the job title presence in the html response output\n        ", "parameters": [{"name": "scraper_class", "value": "'atpgroup'"}], "start": 1732684477536, "stop": 1732684479037, "uuid": "c54cb419-7937-4ea3-9201-4986af9bb5a1", "historyId": "bd88283d22ab041eabf74a87ca3d917e", "testCaseId": "3a863062a3835cf6b2ad4e16e5390871", "fullName": "tests.TestJobsValidator.test_api.TestScrapers#test_job_link_content", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.TestJobsValidator"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1767-130"}, {"name": "thread", "value": "2133-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.TestJobsValidator.test_api"}]}