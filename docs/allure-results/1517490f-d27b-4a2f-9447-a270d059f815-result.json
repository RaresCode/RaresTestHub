{"name": "test_job_link_content[canopy]", "status": "failed", "statusDetails": {"message": "AssertionError: The following job links ['https://anpc.ro/', '/politica-de-confidentialitate/', '/politica-privind-utilizarea-de-cookies/', '/termeni-si-conditii/'] do not contain the expected job title: ['A.N.P.C', 'Politica de confidențialitate', 'Politică utilizare cookie', 'Termeni și condiții']", "trace": "self = <TestJobsValidator.test_api.TestScrapers object at 0x7fa812150f70>\nsetup = (['A.N.P.C', 'Politica de confidențialitate', 'Politică utilizare cookie', 'Termeni și condiții'], [['Bucuresti', 'Ias...uresti', 'Iasi', 'Cluj'], ['Bucuresti', 'Iasi', 'Cluj'], ['Bucuresti', 'Iasi', 'Cluj'], ['Bucuresti', 'Iasi', 'Cluj']])\n\n    @pytest.mark.smoke\n    def test_job_link_content(self, setup):\n        \"\"\"\n        Test job links for the job title presence in the html response output\n        \"\"\"\n    \n        peviitor_jobs_data = setup\n        job_links = peviitor_jobs_data[2]\n        job_titles = peviitor_jobs_data[0]\n>       TestScrapers.setup_tests.jobdetails.check_job_link_content(job_links, job_titles)\n\ntests/TestJobsValidator/test_api.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/TestJobsValidator/api_utils/job_details_utils.py:132: in check_job_link_content\n    self.linkutils.check_job_link_content(self, links, job_titles)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.TestJobsValidator.api_utils.job_links_utils.LinksTestUtils object at 0x7fa8120c9000>\nmainobj = <tests.TestJobsValidator.api_utils.job_details_utils.JobDetails object at 0x7fa8127d9870>\nlinks = ['https://anpc.ro/', '/politica-de-confidentialitate/', '/politica-privind-utilizarea-de-cookies/', '/termeni-si-conditii/']\njob_titles = ['A.N.P.C', 'Politica de confidențialitate', 'Politică utilizare cookie', 'Termeni și condiții']\n\n    def check_job_link_content(self, mainobj, links, job_titles):\n        missing_job_links = []\n        missing_job_titles = []\n        for link, job_title in zip(links, job_titles):\n            job_content = LinksTestUtils().get_html_content(link)\n    \n            # Section where the content is not loaded after the request\n            if job_content is None:\n                missing_job_links.append(link)\n                missing_job_titles.append(job_title)\n                print(\"Job Page content has not been loaded\")\n                for job_link_index, job_link in enumerate(mainobj.filtered_job_links):\n                    if job_link == link:\n                        mainobj.filtered_job_links[job_link_index] = 'REMOVED_JOB'\n                continue\n    \n            # Section that run in case the job page content is loaded\n            soup = BeautifulSoup(job_content, 'html.parser')\n            job_content = soup.get_text()\n            if job_title not in job_content:\n                missing_job_links.append(link)\n                missing_job_titles.append(job_title)\n                for job_link_index, job_link in enumerate(mainobj.filtered_job_links):\n                    if job_link == link:\n                        mainobj.filtered_job_links[job_link_index] = 'REMOVED_JOB'\n    \n>       assert missing_job_links == [], f\"The following job links {missing_job_links} do not contain the expected job title: {missing_job_titles}\"\nE       AssertionError: The following job links ['https://anpc.ro/', '/politica-de-confidentialitate/', '/politica-privind-utilizarea-de-cookies/', '/termeni-si-conditii/'] do not contain the expected job title: ['A.N.P.C', 'Politica de confidențialitate', 'Politică utilizare cookie', 'Termeni și condiții']\n\ntests/TestJobsValidator/api_utils/job_links_utils.py:59: AssertionError"}, "description": "\n        Test job links for the job title presence in the html response output\n        ", "attachments": [{"name": "stdout", "source": "85fcc3b5-6891-4e5b-8927-ff3642774691-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "'canopy'"}], "start": 1733635167983, "stop": 1733635170123, "uuid": "f5ea58ed-1e88-4f83-9cda-5d7990d3b6e1", "historyId": "ed8f713b25943005a5422effdf226bcd", "testCaseId": "3a863062a3835cf6b2ad4e16e5390871", "fullName": "tests.TestJobsValidator.test_api.TestScrapers#test_job_link_content", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.TestJobsValidator"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az526-826"}, {"name": "thread", "value": "1885-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.TestJobsValidator.test_api"}]}