{"name": "test_job_cities[ipso]", "status": "failed", "statusDetails": {"message": "AssertionError: Test found mismatching job cities for the following jobs: ['Brand Manager Spare Parts', 'Specialist vanzari Irigatii Aspersie', 'Specialist Vanzari Irigatii Picurare', 'Tehnician Irigatii']", "trace": "self = <TestJobsValidator.test_api.TestScrapers object at 0x7fc30ad1b6a0>\nsetup = (['Brand Manager Spare Parts', 'Consilier Comercial – zona Satu Mare', 'Coordonator Service – zonele Bucuresti, Mogoso...ia', 'Romania', 'Romania', 'Romania', ...], [[], ['Satu Mare'], ['Ilfov', 'Bucuresti'], ['Ilfov'], ['Ilfov'], [], ...])\n\n    @pytest.mark.smoke\n    def test_job_cities(self, setup):\n        \"\"\"\n        Test job titles contain special characters\n        \"\"\"\n        peviitor_jobs_data = setup\n        job_titles = peviitor_jobs_data[0]\n        job_cities = peviitor_jobs_data[1]\n>       TestScrapers.setup_tests.jobdetails.check_job_cities(job_cities, job_titles)\n\ntests/TestJobsValidator/test_api.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/TestJobsValidator/api_utils/job_details_utils.py:124: in check_job_cities\n    self.cityutils.check_job_cities(job_cities, job_titles)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.TestJobsValidator.api_utils.job_cities_utils.CitiesTestUtils object at 0x7fc30bae0430>\nactual_cities = [['Toate zonele'], ['Satu Mare'], ['Mogosoaia', 'Bucuresti'], ['Mogosoaia'], ['Mogosoaia'], ['all'], ...]\njob_titles = ['Brand Manager Spare Parts', 'Consilier Comercial – zona Satu Mare', 'Coordonator Service – zonele Bucuresti, Mogosoaia', 'Payroll Specialist', 'Specialist Produs Implemente', 'Specialist vanzari Irigatii Aspersie', ...]\n\n    def check_job_cities(self, actual_cities, job_titles):\n        # Itterate over actual cities and get_proper_city > city list or none if one was not found\n    \n        msg = \"Unknown error occured\"\n    \n        missing_cities = []\n        missing_cities_job_titles = []\n    \n        for city_list, job_title in zip(actual_cities, job_titles):\n            if not get_proper_city(city_list):\n                missing_cities.append(city_list)\n                missing_cities_job_titles.append(job_title)\n    \n        if missing_cities:\n            msg = f\"Test found mismatching job cities for the following jobs: {missing_cities_job_titles}\"\n    \n        if not actual_cities and not job_titles:\n            msg = f\"Cannot grab any job cities or job titles from the validator\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert missing_cities == [], msg\nE       AssertionError: Test found mismatching job cities for the following jobs: ['Brand Manager Spare Parts', 'Specialist vanzari Irigatii Aspersie', 'Specialist Vanzari Irigatii Picurare', 'Tehnician Irigatii']\n\ntests/TestJobsValidator/api_utils/job_cities_utils.py:30: AssertionError"}, "description": "\n        Test job titles contain special characters\n        ", "parameters": [{"name": "scraper_class", "value": "'ipso'"}], "start": 1734240577850, "stop": 1734240577856, "uuid": "46dde7a1-8964-4da3-9e97-41e2ab73ac87", "historyId": "d4f719e6c903a8e138aadc7266e7f38d", "testCaseId": "1204388ca11ed5cbe72e4cae6999b749", "fullName": "tests.TestJobsValidator.test_api.TestScrapers#test_job_cities", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.TestJobsValidator"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az2019-23"}, {"name": "thread", "value": "1882-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.TestJobsValidator.test_api"}]}